{
    "swagger": "2.0",
    "info": {
        "description": "This is Znotify api server.",
        "title": "Notify API",
        "contact": {
            "name": "Issues",
            "url": "https://github.com/ZNotify/server/issues"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Provide UI",
                "produces": [
                    "text/html"
                ],
                "summary": "Web Index",
                "responses": {
                    "200": {
                        "description": "html",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/alive": {
            "get": {
                "description": "If the server is alive",
                "produces": [
                    "text/plain"
                ],
                "summary": "Server Heartbeat",
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/check": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "summary": "Check if the user_id is valid",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-bool"
                        }
                    }
                }
            }
        },
        "/docs": {
            "get": {
                "produces": [
                    "text/plain"
                ],
                "summary": "Redirect to docs",
                "responses": {
                    "301": {
                        "description": "Moved Permanently",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/{user_id}": {
            "put": {
                "description": "Send notification to user_id",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "content",
                        "name": "string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-types_Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Send notification to user_id",
                "consumes": [
                    "text/plain"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "Send notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "content",
                        "name": "string",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-types_Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/{user_id}/record": {
            "get": {
                "description": "Get records",
                "produces": [
                    "application/json"
                ],
                "summary": "Get record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret of user",
                        "name": "user_secret",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "The number of records to skip",
                        "name": "skip",
                        "in": "query"
                    },
                    {
                        "maximum": 100,
                        "type": "integer",
                        "default": 20,
                        "description": "The number of records to return",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-array_types_Message"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/{user_id}/send": {
            "put": {
                "description": "Send notification to user_id",
                "produces": [
                    "application/json"
                ],
                "summary": "Send notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret of user",
                        "name": "user_secret",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Notification",
                        "description": "Message Title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Message Content",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Long Message Content (optional)",
                        "name": "long",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "low",
                            "normal",
                            "high"
                        ],
                        "type": "string",
                        "default": "Normal",
                        "description": "The priority of message",
                        "name": "priority",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-types_Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Send notification to user_id",
                "produces": [
                    "application/json"
                ],
                "summary": "Send notification",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret of user",
                        "name": "user_secret",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "default": "Notification",
                        "description": "Message Title",
                        "name": "title",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Message Content",
                        "name": "content",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Long Message Content (optional)",
                        "name": "long",
                        "in": "formData"
                    },
                    {
                        "enum": [
                            "low",
                            "normal",
                            "high"
                        ],
                        "type": "string",
                        "default": "Normal",
                        "description": "The priority of message",
                        "name": "priority",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-types_Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/{user_id}/token/{client_id}": {
            "put": {
                "description": "Create or update token of device",
                "produces": [
                    "application/json"
                ],
                "summary": "Create or update token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "client_id should be a valid UUID",
                        "name": "client_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "enum": [
                            "TelegramHost",
                            "WebSocketHost",
                            "FCM",
                            "WebPush",
                            "WNS"
                        ],
                        "type": "string",
                        "description": "channel can be used. Sometimes less than document.",
                        "name": "channel",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "token",
                        "name": "token",
                        "in": "formData"
                    },
                    {
                        "type": "string",
                        "description": "Additional info about client",
                        "name": "info",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-bool"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            }
        },
        "/{user_id}/token/{device_id}": {
            "delete": {
                "description": "Delete token of device",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "user_id",
                        "name": "user_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "device_id",
                        "name": "device_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-bool"
                        }
                    }
                }
            }
        },
        "/{user_id}/{id}": {
            "get": {
                "description": "Get message record detail of a message",
                "produces": [
                    "application/json"
                ],
                "summary": "Get message record detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret of user",
                        "name": "user_secret",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-types_Message"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/types.BadRequestResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/types.NotFoundResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete message record with id",
                "produces": [
                    "application/json"
                ],
                "summary": "Delete message record",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Secret of user",
                        "name": "user_secret",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "ID of message",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Response-bool"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/types.UnauthorizedResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "item.Priority": {
            "type": "string",
            "enum": [
                "low",
                "normal",
                "high"
            ],
            "x-enum-comments": {
                "PriorityHigh": "high",
                "PriorityLow": "low",
                "PriorityNormal": "normal"
            },
            "x-enum-varnames": [
                "PriorityLow",
                "PriorityNormal",
                "PriorityHigh"
            ]
        },
        "types.BadRequestResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "integer",
                    "default": 400
                }
            }
        },
        "types.Message": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "long": {
                    "type": "string"
                },
                "priority": {
                    "$ref": "#/definitions/item.Priority"
                },
                "title": {
                    "type": "string"
                }
            }
        },
        "types.NotFoundResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "integer",
                    "default": 404
                }
            }
        },
        "types.Response-array_types_Message": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/types.Message"
                    }
                },
                "code": {
                    "type": "integer",
                    "default": 200
                }
            }
        },
        "types.Response-bool": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "boolean"
                },
                "code": {
                    "type": "integer",
                    "default": 200
                }
            }
        },
        "types.Response-types_Message": {
            "type": "object",
            "properties": {
                "body": {
                    "$ref": "#/definitions/types.Message"
                },
                "code": {
                    "type": "integer",
                    "default": 200
                }
            }
        },
        "types.UnauthorizedResponse": {
            "type": "object",
            "properties": {
                "body": {
                    "type": "string"
                },
                "code": {
                    "type": "integer",
                    "default": 401
                }
            }
        }
    }
}