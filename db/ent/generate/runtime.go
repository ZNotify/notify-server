// Code generated by ent, DO NOT EDIT.

package generate

import (
	"notify-api/db/ent/generate/device"
	"notify-api/db/ent/generate/message"
	"notify-api/db/ent/generate/user"
	"notify-api/db/ent/schema"
	"time"
)

// The init function reads all schema descriptors with runtime code
// (default values, validators, hooks and policies) and stitches it
// to their package variables.
func init() {
	deviceMixin := schema.Device{}.Mixin()
	deviceMixinFields0 := deviceMixin[0].Fields()
	_ = deviceMixinFields0
	deviceMixinFields1 := deviceMixin[1].Fields()
	_ = deviceMixinFields1
	deviceFields := schema.Device{}.Fields()
	_ = deviceFields
	// deviceDescCreatedAt is the schema descriptor for created_at field.
	deviceDescCreatedAt := deviceMixinFields0[0].Descriptor()
	// device.DefaultCreatedAt holds the default value on creation for the created_at field.
	device.DefaultCreatedAt = deviceDescCreatedAt.Default.(func() time.Time)
	// deviceDescUpdatedAt is the schema descriptor for updated_at field.
	deviceDescUpdatedAt := deviceMixinFields1[0].Descriptor()
	// device.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	device.DefaultUpdatedAt = deviceDescUpdatedAt.Default.(func() time.Time)
	// device.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	device.UpdateDefaultUpdatedAt = deviceDescUpdatedAt.UpdateDefault.(func() time.Time)
	messageMixin := schema.Message{}.Mixin()
	messageMixinFields0 := messageMixin[0].Fields()
	_ = messageMixinFields0
	messageFields := schema.Message{}.Fields()
	_ = messageFields
	// messageDescCreatedAt is the schema descriptor for created_at field.
	messageDescCreatedAt := messageMixinFields0[0].Descriptor()
	// message.DefaultCreatedAt holds the default value on creation for the created_at field.
	message.DefaultCreatedAt = messageDescCreatedAt.Default.(func() time.Time)
	// messageDescContent is the schema descriptor for content field.
	messageDescContent := messageFields[2].Descriptor()
	// message.ContentValidator is a validator for the "content" field. It is called by the builders before save.
	message.ContentValidator = messageDescContent.Validators[0].(func(string) error)
	// messageDescPriority is the schema descriptor for priority field.
	messageDescPriority := messageFields[4].Descriptor()
	// message.PriorityValidator is a validator for the "priority" field. It is called by the builders before save.
	message.PriorityValidator = messageDescPriority.Validators[0].(func(string) error)
	userMixin := schema.User{}.Mixin()
	userMixinFields0 := userMixin[0].Fields()
	_ = userMixinFields0
	userMixinFields1 := userMixin[1].Fields()
	_ = userMixinFields1
	userFields := schema.User{}.Fields()
	_ = userFields
	// userDescCreatedAt is the schema descriptor for created_at field.
	userDescCreatedAt := userMixinFields0[0].Descriptor()
	// user.DefaultCreatedAt holds the default value on creation for the created_at field.
	user.DefaultCreatedAt = userDescCreatedAt.Default.(func() time.Time)
	// userDescUpdatedAt is the schema descriptor for updated_at field.
	userDescUpdatedAt := userMixinFields1[0].Descriptor()
	// user.DefaultUpdatedAt holds the default value on creation for the updated_at field.
	user.DefaultUpdatedAt = userDescUpdatedAt.Default.(func() time.Time)
	// user.UpdateDefaultUpdatedAt holds the default value on update for the updated_at field.
	user.UpdateDefaultUpdatedAt = userDescUpdatedAt.UpdateDefault.(func() time.Time)
	// userDescGithubLogin is the schema descriptor for githubLogin field.
	userDescGithubLogin := userFields[3].Descriptor()
	// user.GithubLoginValidator is a validator for the "githubLogin" field. It is called by the builders before save.
	user.GithubLoginValidator = userDescGithubLogin.Validators[0].(func(string) error)
	// userDescGithubOauthToken is the schema descriptor for githubOauthToken field.
	userDescGithubOauthToken := userFields[4].Descriptor()
	// user.GithubOauthTokenValidator is a validator for the "githubOauthToken" field. It is called by the builders before save.
	user.GithubOauthTokenValidator = userDescGithubOauthToken.Validators[0].(func(string) error)
}
